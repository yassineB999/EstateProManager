// <auto-generated />
using System;
using EstateProManager.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EstateProManager.Migrations
{
    [DbContext(typeof(EstateProManagerContext))]
    partial class EstateProManagerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EstateProManager.Models.Contrat", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateOnly>("DateDebut")
                        .HasColumnType("date");

                    b.Property<DateOnly>("DateFin")
                        .HasColumnType("date");

                    b.Property<long>("IdLocataire")
                        .HasColumnType("bigint");

                    b.Property<long>("IdPropriete")
                        .HasColumnType("bigint");

                    b.Property<decimal>("PaiementMensuel")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Id")
                        .HasName("PK__Contrats__3214EC07447F1DB6");

                    b.HasIndex("IdLocataire");

                    b.HasIndex("IdPropriete");

                    b.ToTable("Contrats");
                });

            modelBuilder.Entity("EstateProManager.Models.Demande", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("DetailsDemande")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("IdPropriete")
                        .HasColumnType("bigint");

                    b.Property<long>("IdUtilisateur")
                        .HasColumnType("bigint");

                    b.Property<string>("TypeDemande")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK__Demandes__3214EC07D33E4B29");

                    b.HasIndex("IdPropriete");

                    b.HasIndex("IdUtilisateur");

                    b.ToTable("Demandes");
                });

            modelBuilder.Entity("EstateProManager.Models.Propriete", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Caracteristiques")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("DateDeConstruction")
                        .HasColumnType("date");

                    b.Property<string>("Documents")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Emplacement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Taille")
                        .HasColumnType("bigint");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Valeur")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Id")
                        .HasName("PK__Propriet__3214EC0736E8C92B");

                    b.ToTable("Proprietes");
                });

            modelBuilder.Entity("EstateProManager.Models.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Libelle")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("libelle");

                    b.HasKey("Id")
                        .HasName("PK__Roles__3214EC07A44F3C13");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("EstateProManager.Models.Tach", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("DetailsTache")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("IdDemande")
                        .HasColumnType("bigint");

                    b.Property<long>("IdPrestataire")
                        .HasColumnType("bigint");

                    b.Property<string>("StatutTache")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK__Taches__3214EC076FB6A2E7");

                    b.HasIndex("IdDemande");

                    b.HasIndex("IdPrestataire");

                    b.ToTable("Taches");
                });

            modelBuilder.Entity("EstateProManager.Models.Utilisateur", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AdressePostale")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("Birthdate")
                        .HasColumnType("date")
                        .HasColumnName("birthdate");

                    b.Property<string>("Cin")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CIN");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("IdRole")
                        .HasColumnType("bigint");

                    b.Property<string>("MotDePasse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroDeTelephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK__Utilisat__3214EC07949A8F51");

                    b.HasIndex("IdRole");

                    b.ToTable("Utilisateurs");
                });

            modelBuilder.Entity("EstateProManager.Models.Vente", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateOnly>("DateVente")
                        .HasColumnType("date");

                    b.Property<long>("IdAcheteur")
                        .HasColumnType("bigint");

                    b.Property<long>("IdPropriete")
                        .HasColumnType("bigint");

                    b.Property<long>("IdVendeur")
                        .HasColumnType("bigint");

                    b.Property<decimal>("PrixVente")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Id")
                        .HasName("PK__Ventes__3214EC077DD9863D");

                    b.HasIndex("IdAcheteur");

                    b.HasIndex("IdPropriete");

                    b.HasIndex("IdVendeur");

                    b.ToTable("Ventes");
                });

            modelBuilder.Entity("EstateProManager.Models.Contrat", b =>
                {
                    b.HasOne("EstateProManager.Models.Utilisateur", "IdLocataireNavigation")
                        .WithMany("Contrats")
                        .HasForeignKey("IdLocataire")
                        .IsRequired()
                        .HasConstraintName("FK__Contrats__IdLoca__2C3393D0");

                    b.HasOne("EstateProManager.Models.Propriete", "IdProprieteNavigation")
                        .WithMany("Contrats")
                        .HasForeignKey("IdPropriete")
                        .IsRequired()
                        .HasConstraintName("FK__Contrats__IdProp__2B3F6F97");

                    b.Navigation("IdLocataireNavigation");

                    b.Navigation("IdProprieteNavigation");
                });

            modelBuilder.Entity("EstateProManager.Models.Demande", b =>
                {
                    b.HasOne("EstateProManager.Models.Propriete", "IdProprieteNavigation")
                        .WithMany("Demandes")
                        .HasForeignKey("IdPropriete")
                        .IsRequired()
                        .HasConstraintName("FK__Demandes__IdProp__33D4B598");

                    b.HasOne("EstateProManager.Models.Utilisateur", "IdUtilisateurNavigation")
                        .WithMany("Demandes")
                        .HasForeignKey("IdUtilisateur")
                        .IsRequired()
                        .HasConstraintName("FK__Demandes__IdUtil__34C8D9D1");

                    b.Navigation("IdProprieteNavigation");

                    b.Navigation("IdUtilisateurNavigation");
                });

            modelBuilder.Entity("EstateProManager.Models.Tach", b =>
                {
                    b.HasOne("EstateProManager.Models.Demande", "IdDemandeNavigation")
                        .WithMany("Taches")
                        .HasForeignKey("IdDemande")
                        .IsRequired()
                        .HasConstraintName("FK__Taches__IdDemand__37A5467C");

                    b.HasOne("EstateProManager.Models.Utilisateur", "IdPrestataireNavigation")
                        .WithMany("Taches")
                        .HasForeignKey("IdPrestataire")
                        .IsRequired()
                        .HasConstraintName("FK__Taches__IdPresta__38996AB5");

                    b.Navigation("IdDemandeNavigation");

                    b.Navigation("IdPrestataireNavigation");
                });

            modelBuilder.Entity("EstateProManager.Models.Utilisateur", b =>
                {
                    b.HasOne("EstateProManager.Models.Role", "IdRoleNavigation")
                        .WithMany("Utilisateurs")
                        .HasForeignKey("IdRole")
                        .IsRequired()
                        .HasConstraintName("FK__Utilisate__IdRol__267ABA7A");

                    b.Navigation("IdRoleNavigation");
                });

            modelBuilder.Entity("EstateProManager.Models.Vente", b =>
                {
                    b.HasOne("EstateProManager.Models.Utilisateur", "IdAcheteurNavigation")
                        .WithMany("VenteIdAcheteurNavigations")
                        .HasForeignKey("IdAcheteur")
                        .IsRequired()
                        .HasConstraintName("FK__Ventes__IdAchete__300424B4");

                    b.HasOne("EstateProManager.Models.Propriete", "IdProprieteNavigation")
                        .WithMany("Ventes")
                        .HasForeignKey("IdPropriete")
                        .IsRequired()
                        .HasConstraintName("FK__Ventes__IdPropri__2F10007B");

                    b.HasOne("EstateProManager.Models.Utilisateur", "IdVendeurNavigation")
                        .WithMany("VenteIdVendeurNavigations")
                        .HasForeignKey("IdVendeur")
                        .IsRequired()
                        .HasConstraintName("FK__Ventes__IdVendeu__30F848ED");

                    b.Navigation("IdAcheteurNavigation");

                    b.Navigation("IdProprieteNavigation");

                    b.Navigation("IdVendeurNavigation");
                });

            modelBuilder.Entity("EstateProManager.Models.Demande", b =>
                {
                    b.Navigation("Taches");
                });

            modelBuilder.Entity("EstateProManager.Models.Propriete", b =>
                {
                    b.Navigation("Contrats");

                    b.Navigation("Demandes");

                    b.Navigation("Ventes");
                });

            modelBuilder.Entity("EstateProManager.Models.Role", b =>
                {
                    b.Navigation("Utilisateurs");
                });

            modelBuilder.Entity("EstateProManager.Models.Utilisateur", b =>
                {
                    b.Navigation("Contrats");

                    b.Navigation("Demandes");

                    b.Navigation("Taches");

                    b.Navigation("VenteIdAcheteurNavigations");

                    b.Navigation("VenteIdVendeurNavigations");
                });
#pragma warning restore 612, 618
        }
    }
}
